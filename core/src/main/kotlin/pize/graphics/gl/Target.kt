package pize.graphics.gl

import org.lwjgl.opengl.*

enum class Target(val GL: Int) {
    BLEND(GL11.GL_BLEND),
    CULL_FACE(GL11.GL_CULL_FACE),
    DEPTH_TEST(GL11.GL_DEPTH_TEST),
    TEXTURE_2D(GL11.GL_TEXTURE_2D),
    ALPHA_TEST(GL11.GL_ALPHA_TEST),
    AUTO_NORMAL(GL11.GL_AUTO_NORMAL),
    COLOR_LOGIC_OP(GL11.GL_COLOR_LOGIC_OP),
    COLOR_MATERIAL(GL11.GL_COLOR_MATERIAL),
    COLOR_SUM(GL14.GL_COLOR_SUM),
    FOG(GL11.GL_FOG),
    DITHER(GL11.GL_DITHER),
    INDEX_LOGIC_OP(GL11.GL_INDEX_LOGIC_OP),
    LIGHTING(GL11.GL_LIGHTING),
    LINE_SMOOTH(GL11.GL_LINE_SMOOTH),
    LINE_STIPPLE(GL11.GL_LINE_STIPPLE),
    MULTISAMPLE(GL13.GL_MULTISAMPLE),
    NORMALIZE(GL11.GL_NORMALIZE),
    POINT_SMOOTH(GL11.GL_POINT_SMOOTH),
    POINT_SPRITE(GL20.GL_POINT_SPRITE),
    POLYGON_OFFSET_FILL(GL11.GL_POLYGON_OFFSET_FILL),
    POLYGON_OFFSET_LINE(GL11.GL_POLYGON_OFFSET_LINE),
    POLYGON_OFFSET_POINT(GL11.GL_POLYGON_OFFSET_POINT),
    POLYGON_SMOOTH(GL11.GL_POLYGON_SMOOTH),
    POLYGON_STIPPLE(GL11.GL_POLYGON_STIPPLE),
    RESCALE_NORMAL(GL12.GL_RESCALE_NORMAL),
    SAMPLE_ALPHA_TO_COVERAGE(GL13.GL_SAMPLE_ALPHA_TO_COVERAGE),
    SAMPLE_ALPHA_TO_ONE(GL13.GL_SAMPLE_ALPHA_TO_ONE),
    SAMPLE_COVERAGE(GL13.GL_SAMPLE_COVERAGE),
    SCISSOR_TEST(GL11.GL_SCISSOR_TEST),
    STENCIL_TEST(GL11.GL_STENCIL_TEST),
    TEXTURE_1D(GL11.GL_TEXTURE_1D),
    TEXTURE_3D(GL12.GL_TEXTURE_3D),
    TEXTURE_CUBE_MAP(GL13.GL_TEXTURE_CUBE_MAP),
    TEXTURE_GEN_Q(GL11.GL_TEXTURE_GEN_Q),
    TEXTURE_GEN_R(GL11.GL_TEXTURE_GEN_R),
    TEXTURE_GEN_S(GL11.GL_TEXTURE_GEN_S),
    TEXTURE_GEN_T(GL11.GL_TEXTURE_GEN_T),
    VERTEX_PROGRAM_POINT_SIZE(GL20.GL_VERTEX_PROGRAM_POINT_SIZE),
    VERTEX_PROGRAM_TWO_SIDE(GL20.GL_VERTEX_PROGRAM_TWO_SIDE),
    MAP1_COLOR_4(GL11.GL_MAP1_COLOR_4),
    MAP1_INDEX(GL11.GL_MAP1_INDEX),
    MAP1_NORMAL(GL11.GL_MAP1_NORMAL),
    MAP1_TEXTURE_COORD_1(GL11.GL_MAP1_TEXTURE_COORD_1),
    MAP1_TEXTURE_COORD_2(GL11.GL_MAP1_TEXTURE_COORD_2),
    MAP1_TEXTURE_COORD_3(GL11.GL_MAP1_TEXTURE_COORD_3),
    MAP1_TEXTURE_COORD_4(GL11.GL_MAP1_TEXTURE_COORD_4),
    MAP1_VERTEX_3(GL11.GL_MAP1_VERTEX_3),
    MAP1_VERTEX_4(GL11.GL_MAP1_VERTEX_4),
    MAP2_COLOR_4(GL11.GL_MAP2_COLOR_4),
    MAP2_INDEX(GL11.GL_MAP2_INDEX),
    MAP2_NORMAL(GL11.GL_MAP2_NORMAL),
    MAP2_TEXTURE_COORD_1(GL11.GL_MAP2_TEXTURE_COORD_1),
    MAP2_TEXTURE_COORD_2(GL11.GL_MAP2_TEXTURE_COORD_2),
    MAP2_TEXTURE_COORD_3(GL11.GL_MAP2_TEXTURE_COORD_3),
    MAP2_TEXTURE_COORD_4(GL11.GL_MAP2_TEXTURE_COORD_4),
    MAP2_VERTEX_3(GL11.GL_MAP2_VERTEX_3),
    MAP2_VERTEX_4(GL11.GL_MAP2_VERTEX_4),
    CLIP_PLANE0(GL11.GL_CLIP_PLANE0),
    CLIP_PLANE1(GL11.GL_CLIP_PLANE1),
    CLIP_PLANE2(GL11.GL_CLIP_PLANE2),
    CLIP_PLANE3(GL11.GL_CLIP_PLANE3),
    CLIP_PLANE4(GL11.GL_CLIP_PLANE4),
    CLIP_PLANE5(GL11.GL_CLIP_PLANE5),
    LIGHT0(GL11.GL_LIGHT0),
    LIGHT1(GL11.GL_LIGHT1),
    LIGHT2(GL11.GL_LIGHT2),
    LIGHT3(GL11.GL_LIGHT3),
    LIGHT4(GL11.GL_LIGHT4),
    LIGHT5(GL11.GL_LIGHT5),
    LIGHT6(GL11.GL_LIGHT6),
    LIGHT7(GL11.GL_LIGHT7),

    // ARB
    COLOR_TABLE(ARBImaging.GL_COLOR_TABLE),
    CONVOLUTION_1D(ARBImaging.GL_CONVOLUTION_1D),
    CONVOLUTION_2D(ARBImaging.GL_CONVOLUTION_2D),
    HISTOGRAM(ARBImaging.GL_HISTOGRAM),
    MINMAX(ARBImaging.GL_MINMAX),
    POST_COLOR_MATRIX_COLOR_TABLE(ARBImaging.GL_POST_COLOR_MATRIX_COLOR_TABLE),
    POST_CONVOLUTION_COLOR_TABLE(ARBImaging.GL_POST_CONVOLUTION_COLOR_TABLE),
    SEPARABLE_2D(ARBImaging.GL_SEPARABLE_2D)
}
